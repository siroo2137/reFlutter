name: Build

on:
  push

jobs:
  build-v2:
    runs-on: macos-13
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1.3.0
        with:
          xcode-version: latest-stable

      - name: Set variables
        run: |
          if [ -f SNAPSHOT_HASH ]; then
            HASH=$(cat SNAPSHOT_HASH)
            echo "SNAPSHOT_HASH=$HASH" >> $GITHUB_ENV
          else
            echo "SNAPSHOT_HASH not found"
            exit 1
          fi

      - name: Install tools
        run: |
          brew install ninja libusbmuxd ideviceinstaller ios-deploy
          python3 -m pip install wheel
          python3 -m pip install .
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH=$PATH:`pwd`/depot_tools

      - name: Clone Flutter Engine (v2)
        run: |
          git clone https://github.com/flutter/flutter.git
          cd flutter
          git fetch origin ${{env.SNAPSHOT_HASH}}
          git reset --hard FETCH_HEAD

      - name: Configure gclient (v2)
        run: |
          cd flutter
          mkdir -p engine/src/flutter
          mv * engine/src/flutter || true
          cd engine/src/flutter
          echo 'solutions = [{"managed": False, "name": "src/flutter", "url": "'"$PWD"'", "deps_file": "DEPS", "custom_deps": {}, "safesync_url": ""}]' > ../../../.gclient
          cd ../../../
          gclient sync --nohooks --jobs 16
          gclient runhooks

      - name: ninja build Flutter.framework (v2)
        run: |
          cd flutter/engine/src/flutter
          export PATH=$PATH:`pwd`/../../../../depot_tools
          ./tools/gn --no-goma --ios --runtime-mode=release
          ninja -C out/ios_release

      - name: ninja build libflutter_arm64 (v2)
        run: |
          cd flutter/engine/src/flutter
          export PATH=$PATH:`pwd`/../../../../depot_tools
          ./tools/gn --no-goma --android --android-cpu=arm64 --runtime-mode=release
          ninja -C out/android_release_arm64

      - name: ninja build libflutter_arm (v2)
        run: |
          cd flutter/engine/src/flutter
          export PATH=$PATH:`pwd`/../../../../depot_tools
          ./tools/gn --no-goma --android --android-cpu=arm --runtime-mode=release
          ninja -C out/android_release

      - name: Move to release (v2)
        run: |
          cd flutter/engine/src/flutter
          cp out/ios_release/Flutter.framework/Flutter ../../../../Flutter
          cp out/android_release_arm64/lib.stripped/libflutter.so ../../../../libflutter_arm64.so || :
          cp out/android_release/lib.stripped/libflutter.so ../../../../libflutter_arm.so || :

      - name: iOS Release (v2)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ios-v2-${{env.SNAPSHOT_HASH}}
          files: ./Flutter

      - name: Android Release (v2)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: android-v2-${{env.SNAPSHOT_HASH}}
          files: ./*.so

  build-v3:
    runs-on: macos-13
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1.3.0
        with:
          xcode-version: latest-stable

      - name: Set variables
        run: |
          if [ -f SNAPSHOT_HASH ]; then
            HASH=$(cat SNAPSHOT_HASH)
            echo "SNAPSHOT_HASH=$HASH" >> $GITHUB_ENV
          else
            echo "SNAPSHOT_HASH not found"
            exit 1
          fi

      - name: Install tools
        run: |
          brew install ninja libusbmuxd ideviceinstaller ios-deploy
          python3 -m pip install wheel
          python3 -m pip install .
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          export PATH=$PATH:`pwd`/depot_tools

      - name: Clone Flutter Engine (v3)
        run: |
          git clone https://github.com/flutter/flutter.git
          cd flutter
          git fetch origin ${{env.SNAPSHOT_HASH}}
          git reset --hard FETCH_HEAD

      - name: Configure gclient (v3)
        run: |
          cd flutter
          mkdir -p engine/src/flutter
          mv * engine/src/flutter || true
          cd engine/src/flutter
          echo 'solutions = [{"managed": False, "name": "src/flutter", "url": "'"$PWD"'", "deps_file": "DEPS", "custom_deps": {}, "safesync_url": ""}]' > ../../../.gclient
          cd ../../../
          gclient sync --nohooks --jobs 16
          gclient runhooks

      - name: ninja build Flutter.framework (v3)
        run: |
          cd flutter/engine/src/flutter
          export PATH=$PATH:`pwd`/../../../../depot_tools
          ./tools/gn --no-goma --ios --runtime-mode=release
          ninja -C out/ios_release

      - name: ninja build libflutter_arm64 (v3)
        run: |
          cd flutter/engine/src/flutter
          export PATH=$PATH:`pwd`/../../../../depot_tools
          ./tools/gn --no-goma --android --android-cpu=arm64 --runtime-mode=release
          ninja -C out/android_release_arm64

      - name: ninja build libflutter_arm (v3)
        run: |
          cd flutter/engine/src/flutter
          export PATH=$PATH:`pwd`/../../../../depot_tools
          ./tools/gn --no-goma --android --android-cpu=arm --runtime-mode=release
          ninja -C out/android_release

      - name: Move to release (v3)
        run: |
          cd flutter/engine/src/flutter
          cp out/ios_release/Flutter.framework/Flutter ../../../../Flutter
          cp out/android_release_arm64/lib.stripped/libflutter.so ../../../../libflutter_arm64.so || :
          cp out/android_release/lib.stripped/libflutter.so ../../../../libflutter_arm.so || :

      - name: iOS Release (v3)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ios-v3-${{env.SNAPSHOT_HASH}}
          files: ./Flutter

      - name: Android Release (v3)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: android-v3-${{env.SNAPSHOT_HASH}}
          files: ./*.so
